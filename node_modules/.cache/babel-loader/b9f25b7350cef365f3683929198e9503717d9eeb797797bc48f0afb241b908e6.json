{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\Documents\\\\Nft\\\\src\\\\pages\\\\Marketplace.tsx\";\nimport React from 'react';\nimport { Container, Grid, Card, CardContent, CardMedia, Typography, Box } from '@mui/material';\n\n// Temporary mock data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockNFTs = [{\n  id: 1,\n  title: 'Digital Art #1',\n  price: '0.5 ETH',\n  image: 'https://via.placeholder.com/300',\n  creator: 'Artist1'\n}, {\n  id: 2,\n  title: 'Crypto Punk #2',\n  price: '2.5 ETH',\n  image: 'https://via.placeholder.com/300',\n  creator: 'Artist2'\n}\n// Add more mock NFTs as needed\n];\nconst Marketplace = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"NFT Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: mockNFTs.map(nft => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"200\",\n            image: nft.image,\n            alt: nft.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              component: \"div\",\n              children: nft.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Creator: \", nft.creator]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                children: nft.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, nft.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Marketplace;\nexport default Marketplace;\nvar _c;\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["React","Container","Grid","Card","CardContent","CardMedia","Typography","Box","jsxDEV","_jsxDEV","mockNFTs","id","title","price","image","creator","Marketplace","maxWidth","sx","mt","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","nft","item","xs","sm","md","lg","height","alt","color","_c","$RefreshReg$"],"sources":["C:/Users/hardik/Documents/Nft/src/pages/Marketplace.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Container, Grid, Card, CardContent, CardMedia, Typography, Box } from '@mui/material';\r\n\r\n// Temporary mock data\r\nconst mockNFTs = [\r\n  {\r\n    id: 1,\r\n    title: 'Digital Art #1',\r\n    price: '0.5 ETH',\r\n    image: 'https://via.placeholder.com/300',\r\n    creator: 'Artist1',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Crypto Punk #2',\r\n    price: '2.5 ETH',\r\n    image: 'https://via.placeholder.com/300',\r\n    creator: 'Artist2',\r\n  },\r\n  // Add more mock NFTs as needed\r\n];\r\n\r\nconst Marketplace = () => {\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        NFT Marketplace\r\n      </Typography>\r\n      <Grid container spacing={4}>\r\n        {mockNFTs.map((nft) => (\r\n          <Grid item key={nft.id} xs={12} sm={6} md={4} lg={3}>\r\n            <Card>\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"200\"\r\n                image={nft.image}\r\n                alt={nft.title}\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                  {nft.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Creator: {nft.creator}\r\n                </Typography>\r\n                <Box sx={{ mt: 1 }}>\r\n                  <Typography variant=\"h6\" color=\"primary\">\r\n                    {nft.price}\r\n                  </Typography>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Marketplace; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}