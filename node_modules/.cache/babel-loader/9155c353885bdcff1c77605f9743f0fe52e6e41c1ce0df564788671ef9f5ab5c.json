{"ast":null,"code":"import React,{useState}from'react';import{Container,Typography,TextField,Button,Paper,Grid}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateNFT=()=>{const[formData,setFormData]=useState({name:'',description:'',price:'',image:null});const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>({...prev,[name]:value}));};const handleImageChange=e=>{if(e.target.files&&e.target.files[0]){setFormData(prev=>({...prev,image:e.target.files[0]}));}};const handleSubmit=e=>{e.preventDefault();// TODO: Implement NFT creation logic\nconsole.log('Form submitted:',formData);};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",sx:{mt:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Create New NFT\"}),/*#__PURE__*/_jsx(Paper,{sx:{p:4},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"NFT Name\",name:\"name\",value:formData.name,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Description\",name:\"description\",value:formData.description,onChange:handleInputChange,multiline:true,rows:4,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Price (ETH)\",name:\"price\",type:\"number\",value:formData.price,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsxs(Button,{variant:\"contained\",component:\"label\",fullWidth:true,sx:{mb:2},children:[\"Upload Image\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",hidden:true,accept:\"image/*\",onChange:handleImageChange})]}),formData.image&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Selected file: \",formData.image.name]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,size:\"large\",children:\"Create NFT\"})})]})})})]});};export default CreateNFT;","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Paper","Grid","jsx","_jsx","jsxs","_jsxs","CreateNFT","formData","setFormData","name","description","price","image","handleInputChange","e","value","target","prev","handleImageChange","files","handleSubmit","preventDefault","console","log","maxWidth","sx","mt","children","variant","component","gutterBottom","p","onSubmit","container","spacing","item","xs","fullWidth","label","onChange","required","multiline","rows","type","mb","hidden","accept","color","size"],"sources":["C:/Users/hardik/Documents/Nft/src/pages/CreateNFT.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n} from '@mui/material';\r\n\r\nconst CreateNFT = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    image: null as File | null,\r\n  });\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        image: e.target.files![0],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // TODO: Implement NFT creation logic\r\n    console.log('Form submitted:', formData);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Create New NFT\r\n      </Typography>\r\n      <Paper sx={{ p: 4 }}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"NFT Name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                multiline\r\n                rows={4}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Price (ETH)\"\r\n                name=\"price\"\r\n                type=\"number\"\r\n                value={formData.price}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                fullWidth\r\n                sx={{ mb: 2 }}\r\n              >\r\n                Upload Image\r\n                <input\r\n                  type=\"file\"\r\n                  hidden\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageChange}\r\n                />\r\n              </Button>\r\n              {formData.image && (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Selected file: {formData.image.name}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                size=\"large\"\r\n              >\r\n                Create NFT\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateNFT; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}