{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\Documents\\\\Nft\\\\src\\\\context\\\\SearchContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContext = /*#__PURE__*/createContext(undefined);\nexport const SearchProvider = ({\n  children\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n  const handleSearch = term => {\n    setSearchTerm(term);\n    // Redirect to marketplace with search term\n    navigate(`/marketplace?search=${encodeURIComponent(term)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: {\n      searchTerm,\n      setSearchTerm,\n      handleSearch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchProvider, \"wjbP4zVEBL8ya0shEuwo30QWfMs=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchProvider;\nexport const useSearch = () => {\n  _s2();\n  const context = useContext(SearchContext);\n  if (context === undefined) {\n    throw new Error('useSearch must be used within a SearchProvider');\n  }\n  return context;\n};\n_s2(useSearch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useNavigate","jsxDEV","_jsxDEV","SearchContext","undefined","SearchProvider","children","_s","searchTerm","setSearchTerm","navigate","handleSearch","term","encodeURIComponent","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSearch","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/hardik/Documents/Nft/src/context/SearchContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface SearchContextType {\r\n  searchTerm: string;\r\n  setSearchTerm: (term: string) => void;\r\n  handleSearch: (term: string) => void;\r\n}\r\n\r\nconst SearchContext = createContext<SearchContextType | undefined>(undefined);\r\n\r\nexport const SearchProvider = ({ children }: { children: ReactNode }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = (term: string) => {\r\n    setSearchTerm(term);\r\n    // Redirect to marketplace with search term\r\n    navigate(`/marketplace?search=${encodeURIComponent(term)}`);\r\n  };\r\n\r\n  return (\r\n    <SearchContext.Provider value={{ searchTerm, setSearchTerm, handleSearch }}>\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSearch = () => {\r\n  const context = useContext(SearchContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSearch must be used within a SearchProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ/C,MAAMC,aAAa,gBAAGN,aAAa,CAAgCO,SAAS,CAAC;AAE7E,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAIC,IAAY,IAAK;IACrCH,aAAa,CAACG,IAAI,CAAC;IACnB;IACAF,QAAQ,CAAC,uBAAuBG,kBAAkB,CAACD,IAAI,CAAC,EAAE,CAAC;EAC7D,CAAC;EAED,oBACEV,OAAA,CAACC,aAAa,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEP,UAAU;MAAEC,aAAa;MAAEE;IAAa,CAAE;IAAAL,QAAA,EACxEA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACZ,EAAA,CAfWF,cAAc;EAAA,QAERL,WAAW;AAAA;AAAAoB,EAAA,GAFjBf,cAAc;AAiB3B,OAAO,MAAMgB,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGzB,UAAU,CAACK,aAAa,CAAC;EACzC,IAAIoB,OAAO,KAAKnB,SAAS,EAAE;IACzB,MAAM,IAAIoB,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}