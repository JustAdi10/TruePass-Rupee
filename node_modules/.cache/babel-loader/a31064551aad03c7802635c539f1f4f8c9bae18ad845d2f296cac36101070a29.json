{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\Documents\\\\HackathonTp\\\\TruePass\\\\src\\\\components\\\\layout\\\\Navbar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Toolbar, Typography, Button, Box, IconButton, Badge, Avatar, Chip, Alert, Snackbar } from '@mui/material';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { useSearch } from '../../context/SearchContext';\nimport { useCart } from '../../context/CartContext';\nimport { useAuth } from '../../context/AuthContext';\n\n// Define window.ethereum for TypeScript\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  var _user$email;\n  const [inputValue, setInputValue] = useState('');\n  const {\n    handleSearch\n  } = useSearch();\n  const {\n    cartItemCount\n  } = useCart();\n  const {\n    isAuthenticated,\n    user,\n    logout\n  } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Wallet states\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [walletBalance, setWalletBalance] = useState('0');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [userMenuAnchorEl, setUserMenuAnchorEl] = useState(null);\n  const [notification, setNotification] = useState({\n    show: false,\n    message: '',\n    type: 'info'\n  });\n\n  // Check if MetaMask is installed\n  const isMetaMaskInstalled = () => {\n    return window.ethereum && window.ethereum.isMetaMask;\n  };\n\n  // Format wallet address for display\n  const formatAddress = address => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  // Format balance to 4 decimal places\n  const formatBalance = balanceInWei => {\n    // Convert wei to ETH (1 ETH = 10^18 wei)\n    const ethBalance = parseInt(balanceInWei, 16) / Math.pow(10, 18);\n    return ethBalance.toFixed(4);\n  };\n\n  // Handle account changes from MetaMask\n  const handleAccountsChanged = accounts => {\n    if (accounts.length === 0) {\n      // User has disconnected all accounts\n      setWalletConnected(false);\n      setWalletAddress('');\n      setWalletBalance('0');\n      setNotification({\n        show: true,\n        message: 'Wallet disconnected',\n        type: 'info'\n      });\n    } else {\n      // User has changed the active account\n      setWalletAddress(accounts[0]);\n      getBalance(accounts[0]);\n    }\n  };\n\n  // Handle chain changes from MetaMask\n  const handleChainChanged = () => {\n    // Recommended by MetaMask to refresh the page on chain change\n    window.location.reload();\n  };\n\n  // Check for existing connection on mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      if (isMetaMaskInstalled()) {\n        try {\n          // Check if user is already connected\n          const accounts = await window.ethereum.request({\n            method: 'eth_accounts'\n          });\n          if (accounts && accounts.length > 0) {\n            setWalletConnected(true);\n            setWalletAddress(accounts[0]);\n            getBalance(accounts[0]);\n          }\n\n          // Add event listeners\n          window.ethereum.on('accountsChanged', handleAccountsChanged);\n          window.ethereum.on('chainChanged', handleChainChanged);\n        } catch (error) {\n          console.error('Failed to connect to MetaMask:', error);\n        }\n      }\n    };\n    checkConnection();\n\n    // Cleanup event listeners\n    return () => {\n      if (window.ethereum && window.ethereum.removeListener) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n      }\n    };\n  }, []);\n\n  // Sync input value with URL search param when on marketplace\n  useEffect(() => {\n    if (location.pathname === '/marketplace') {\n      const params = new URLSearchParams(location.search);\n      const searchQuery = params.get('search') || '';\n      setInputValue(searchQuery);\n    } else {\n      setInputValue('');\n    }\n  }, [location]);\n\n  // Get ETH balance for the account\n  const getBalance = async account => {\n    if (!account || !isMetaMaskInstalled()) return;\n    try {\n      const balance = await window.ethereum.request({\n        method: 'eth_getBalance',\n        params: [account, 'latest']\n      });\n      setWalletBalance(formatBalance(balance));\n    } catch (error) {\n      console.error('Error getting balance:', error);\n      setNotification({\n        show: true,\n        message: 'Failed to get wallet balance',\n        type: 'error'\n      });\n    }\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    setInputValue(newValue);\n    if (location.pathname === '/marketplace') {\n      handleSearch(newValue);\n    }\n  };\n  const handleSearchClick = () => {\n    if (inputValue.trim()) {\n      if (location.pathname !== '/marketplace') {\n        navigate(`/marketplace?search=${encodeURIComponent(inputValue.trim())}`);\n      } else {\n        handleSearch(inputValue.trim());\n      }\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearchClick();\n    }\n  };\n  const handleClearSearch = () => {\n    setInputValue('');\n    handleSearch('');\n  };\n  const handleCartClick = () => {\n    // Navigate to cart page\n    navigate('/cart');\n  };\n  const handleConnectWallet = async () => {\n    if (!isMetaMaskInstalled()) {\n      setNotification({\n        show: true,\n        message: 'Please install MetaMask extension to connect a wallet',\n        type: 'warning'\n      });\n      window.open('https://metamask.io/download/', '_blank');\n      return;\n    }\n    try {\n      // Request access to the user's accounts\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      if (accounts.length > 0) {\n        const account = accounts[0];\n        setWalletAddress(account);\n        setWalletConnected(true);\n        getBalance(account);\n        setNotification({\n          show: true,\n          message: 'Wallet connected successfully',\n          type: 'success'\n        });\n      }\n    } catch (error) {\n      console.error('Error connecting to MetaMask:', error);\n\n      // Handle user rejected request\n      if (error.code === 4001) {\n        setNotification({\n          show: true,\n          message: 'Connection request rejected by user',\n          type: 'info'\n        });\n      } else {\n        setNotification({\n          show: true,\n          message: 'Failed to connect wallet: ' + (error.message || 'Unknown error'),\n          type: 'error'\n        });\n      }\n    }\n  };\n  const handleDisconnectWallet = () => {\n    // Note: MetaMask doesn't provide a way to disconnect programmatically\n    // But we can clear our local state\n    setWalletConnected(false);\n    setWalletAddress('');\n    setWalletBalance('0');\n    setAnchorEl(null);\n    setNotification({\n      show: true,\n      message: 'Wallet disconnected from app',\n      type: 'info'\n    });\n  };\n  const handleLogout = () => {\n    logout();\n    setUserMenuAnchorEl(null);\n    setNotification({\n      show: true,\n      message: 'You have been logged out',\n      type: 'info'\n    });\n  };\n  const handleLogin = () => {\n    navigate('/login');\n    setUserMenuAnchorEl(null);\n  };\n  const handleCreateNFT = () => {\n    navigate('/create-nft');\n    setUserMenuAnchorEl(null);\n  };\n  const handleWalletClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleUserMenuClick = event => {\n    setUserMenuAnchorEl(event.currentTarget);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n  const handleCloseUserMenu = () => {\n    setUserMenuAnchorEl(null);\n  };\n  const copyAddressToClipboard = () => {\n    if (walletAddress) {\n      navigator.clipboard.writeText(walletAddress);\n      setNotification({\n        show: true,\n        message: 'Wallet address copied to clipboard',\n        type: 'success'\n      });\n    }\n    handleCloseMenu();\n  };\n  const handleCloseNotification = () => {\n    setNotification({\n      ...notification,\n      show: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"sticky\",\n    sx: {\n      backgroundColor: 'transparent',\n      boxShadow: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: {\n        justifyContent: 'space-between',\n        py: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: RouterLink,\n          to: \"/\",\n          sx: {\n            textDecoration: 'none',\n            color: 'text.primary',\n            fontWeight: 'bold',\n            fontSize: '1.5rem'\n          },\n          children: \"TruePass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n          backgroundColor: 'white',\n          padding: '8px 16px',\n          borderRadius: '8px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          component: RouterLink,\n          to: \"/marketplace\",\n          sx: {\n            color: 'text.primary',\n            '&:hover': {\n              backgroundColor: 'rgba(0, 0, 0, 0.04)'\n            }\n          },\n          children: \"Marketplace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCreateNFT,\n            sx: {\n              color: 'text.primary',\n              '&:hover': {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)'\n              }\n            },\n            children: \"Create NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleCartClick,\n            sx: {\n              color: 'text.primary',\n              '&:hover': {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              badgeContent: cartItemCount,\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(ShoppingCartIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null, walletConnected ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            icon: /*#__PURE__*/_jsxDEV(AccountBalanceWalletIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 23\n            }, this),\n            label: `${formatAddress(walletAddress)} (${walletBalance} ETH)`,\n            onClick: handleWalletClick,\n            sx: {\n              backgroundColor: 'rgba(0, 0, 0, 0.04)',\n              '&:hover': {\n                backgroundColor: 'rgba(0, 0, 0, 0.08)'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AccountBalanceWalletIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 26\n          }, this),\n          onClick: handleConnectWallet,\n          sx: {\n            backgroundColor: 'primary.main',\n            color: 'white',\n            '&:hover': {\n              backgroundColor: 'primary.dark'\n            }\n          },\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleUserMenuClick,\n          sx: {\n            color: 'text.primary',\n            '&:hover': {\n              backgroundColor: 'rgba(0, 0, 0, 0.04)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              width: 32,\n              height: 32\n            },\n            children: (user === null || user === void 0 ? void 0 : (_user$email = user.email) === null || _user$email === void 0 ? void 0 : _user$email[0].toUpperCase()) || /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          component: RouterLink,\n          to: \"/login\",\n          startIcon: /*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 26\n          }, this),\n          sx: {\n            color: 'text.primary',\n            '&:hover': {\n              backgroundColor: 'rgba(0, 0, 0, 0.04)'\n            }\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.show,\n      autoHideDuration: 5000,\n      onClose: handleCloseNotification,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseNotification,\n        severity: notification.type,\n        variant: \"filled\",\n        sx: {\n          width: '100%'\n        },\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"InF5MYo6CvFDHvpOHqx+qn/X18k=\", false, function () {\n  return [useSearch, useCart, useAuth, useLocation, useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","AppBar","Toolbar","Typography","Button","Box","IconButton","Badge","Avatar","Chip","Alert","Snackbar","Link","RouterLink","useLocation","useNavigate","ShoppingCartIcon","AccountBalanceWalletIcon","PersonIcon","LoginIcon","useSearch","useCart","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","_user$email","inputValue","setInputValue","handleSearch","cartItemCount","isAuthenticated","user","logout","location","navigate","walletConnected","setWalletConnected","walletAddress","setWalletAddress","walletBalance","setWalletBalance","anchorEl","setAnchorEl","userMenuAnchorEl","setUserMenuAnchorEl","notification","setNotification","show","message","type","isMetaMaskInstalled","window","ethereum","isMetaMask","formatAddress","address","substring","length","formatBalance","balanceInWei","ethBalance","parseInt","Math","pow","toFixed","handleAccountsChanged","accounts","getBalance","handleChainChanged","reload","checkConnection","request","method","on","error","console","removeListener","pathname","params","URLSearchParams","search","searchQuery","get","account","balance","handleInputChange","event","newValue","target","value","handleSearchClick","trim","encodeURIComponent","handleKeyPress","key","handleClearSearch","handleCartClick","handleConnectWallet","open","code","handleDisconnectWallet","handleLogout","handleLogin","handleCreateNFT","handleWalletClick","currentTarget","handleUserMenuClick","handleCloseMenu","handleCloseUserMenu","copyAddressToClipboard","navigator","clipboard","writeText","handleCloseNotification","position","sx","backgroundColor","boxShadow","children","justifyContent","py","display","alignItems","gap","variant","component","to","textDecoration","color","fontWeight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","padding","borderRadius","onClick","badgeContent","icon","label","startIcon","width","height","email","toUpperCase","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","_c","$RefreshReg$"],"sources":["C:/Users/hardik/Documents/HackathonTp/TruePass/src/components/layout/Navbar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Box,\n  IconButton,\n  InputBase,\n  Badge,\n  Menu,\n  MenuItem,\n  Avatar,\n  Chip,\n  Alert,\n  Snackbar,\n  Divider,\n} from '@mui/material';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { useSearch } from '../../context/SearchContext';\nimport { useCart } from '../../context/CartContext';\nimport { useAuth } from '../../context/AuthContext';\n\n// Define window.ethereum for TypeScript\ndeclare global {\n  interface Window {\n    ethereum?: {\n      isMetaMask?: boolean;\n      request: (args: { method: string; params?: any[] }) => Promise<any>;\n      on: (eventName: string, callback: (...args: any[]) => void) => void;\n      removeListener: (eventName: string, callback: (...args: any[]) => void) => void;\n    };\n  }\n}\n\nconst Navbar = () => {\n  const [inputValue, setInputValue] = useState('');\n  const { handleSearch } = useSearch();\n  const { cartItemCount } = useCart();\n  const { isAuthenticated, user, logout } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  // Wallet states\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [walletBalance, setWalletBalance] = useState('0');\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [userMenuAnchorEl, setUserMenuAnchorEl] = useState<null | HTMLElement>(null);\n  const [notification, setNotification] = useState<{\n    show: boolean;\n    message: string;\n    type: 'error' | 'info' | 'success' | 'warning';\n  }>({\n    show: false,\n    message: '',\n    type: 'info'\n  });\n  \n  // Check if MetaMask is installed\n  const isMetaMaskInstalled = () => {\n    return window.ethereum && window.ethereum.isMetaMask;\n  };\n  \n  // Format wallet address for display\n  const formatAddress = (address: string) => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n  \n  // Format balance to 4 decimal places\n  const formatBalance = (balanceInWei: string) => {\n    // Convert wei to ETH (1 ETH = 10^18 wei)\n    const ethBalance = parseInt(balanceInWei, 16) / Math.pow(10, 18);\n    return ethBalance.toFixed(4);\n  };\n\n  // Handle account changes from MetaMask\n  const handleAccountsChanged = (accounts: string[]) => {\n    if (accounts.length === 0) {\n      // User has disconnected all accounts\n      setWalletConnected(false);\n      setWalletAddress('');\n      setWalletBalance('0');\n      setNotification({\n        show: true,\n        message: 'Wallet disconnected',\n        type: 'info'\n      });\n    } else {\n      // User has changed the active account\n      setWalletAddress(accounts[0]);\n      getBalance(accounts[0]);\n    }\n  };\n\n  // Handle chain changes from MetaMask\n  const handleChainChanged = () => {\n    // Recommended by MetaMask to refresh the page on chain change\n    window.location.reload();\n  };\n\n  // Check for existing connection on mount\n  useEffect(() => {\n    const checkConnection = async () => {\n      if (isMetaMaskInstalled()) {\n        try {\n          // Check if user is already connected\n          const accounts = await window.ethereum!.request({ method: 'eth_accounts' });\n          if (accounts && accounts.length > 0) {\n            setWalletConnected(true);\n            setWalletAddress(accounts[0]);\n            getBalance(accounts[0]);\n          }\n          \n          // Add event listeners\n          window.ethereum!.on('accountsChanged', handleAccountsChanged);\n          window.ethereum!.on('chainChanged', handleChainChanged);\n        } catch (error) {\n          console.error('Failed to connect to MetaMask:', error);\n        }\n      }\n    };\n    \n    checkConnection();\n    \n    // Cleanup event listeners\n    return () => {\n      if (window.ethereum && window.ethereum.removeListener) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n      }\n    };\n  }, []);\n\n  // Sync input value with URL search param when on marketplace\n  useEffect(() => {\n    if (location.pathname === '/marketplace') {\n      const params = new URLSearchParams(location.search);\n      const searchQuery = params.get('search') || '';\n      setInputValue(searchQuery);\n    } else {\n      setInputValue('');\n    }\n  }, [location]);\n  \n  // Get ETH balance for the account\n  const getBalance = async (account: string) => {\n    if (!account || !isMetaMaskInstalled()) return;\n    \n    try {\n      const balance = await window.ethereum!.request({\n        method: 'eth_getBalance',\n        params: [account, 'latest']\n      });\n      \n      setWalletBalance(formatBalance(balance));\n    } catch (error) {\n      console.error('Error getting balance:', error);\n      setNotification({\n        show: true,\n        message: 'Failed to get wallet balance',\n        type: 'error'\n      });\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n    setInputValue(newValue);\n    if (location.pathname === '/marketplace') {\n      handleSearch(newValue);\n    }\n  };\n\n  const handleSearchClick = () => {\n    if (inputValue.trim()) {\n      if (location.pathname !== '/marketplace') {\n        navigate(`/marketplace?search=${encodeURIComponent(inputValue.trim())}`);\n      } else {\n        handleSearch(inputValue.trim());\n      }\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      handleSearchClick();\n    }\n  };\n\n  const handleClearSearch = () => {\n    setInputValue('');\n    handleSearch('');\n  };\n\n  const handleCartClick = () => {\n    // Navigate to cart page\n    navigate('/cart');\n  };\n  \n  const handleConnectWallet = async () => {\n    if (!isMetaMaskInstalled()) {\n      setNotification({\n        show: true,\n        message: 'Please install MetaMask extension to connect a wallet',\n        type: 'warning'\n      });\n      window.open('https://metamask.io/download/', '_blank');\n      return;\n    }\n    \n    try {\n      // Request access to the user's accounts\n      const accounts = await window.ethereum!.request({ \n        method: 'eth_requestAccounts' \n      });\n      \n      if (accounts.length > 0) {\n        const account = accounts[0];\n        setWalletAddress(account);\n        setWalletConnected(true);\n        getBalance(account);\n        \n        setNotification({\n          show: true,\n          message: 'Wallet connected successfully',\n          type: 'success'\n        });\n      }\n    } catch (error: any) {\n      console.error('Error connecting to MetaMask:', error);\n      \n      // Handle user rejected request\n      if (error.code === 4001) {\n        setNotification({\n          show: true,\n          message: 'Connection request rejected by user',\n          type: 'info'\n        });\n      } else {\n        setNotification({\n          show: true,\n          message: 'Failed to connect wallet: ' + (error.message || 'Unknown error'),\n          type: 'error'\n        });\n      }\n    }\n  };\n  \n  const handleDisconnectWallet = () => {\n    // Note: MetaMask doesn't provide a way to disconnect programmatically\n    // But we can clear our local state\n    setWalletConnected(false);\n    setWalletAddress('');\n    setWalletBalance('0');\n    setAnchorEl(null);\n    \n    setNotification({\n      show: true,\n      message: 'Wallet disconnected from app',\n      type: 'info'\n    });\n  };\n  \n  const handleLogout = () => {\n    logout();\n    setUserMenuAnchorEl(null);\n    setNotification({\n      show: true,\n      message: 'You have been logged out',\n      type: 'info'\n    });\n  };\n  \n  const handleLogin = () => {\n    navigate('/login');\n    setUserMenuAnchorEl(null);\n  };\n  \n  const handleCreateNFT = () => {\n    navigate('/create-nft');\n    setUserMenuAnchorEl(null);\n  };\n  \n  const handleWalletClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleUserMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n    setUserMenuAnchorEl(event.currentTarget);\n  };\n  \n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n  \n  const handleCloseUserMenu = () => {\n    setUserMenuAnchorEl(null);\n  };\n  \n  const copyAddressToClipboard = () => {\n    if (walletAddress) {\n      navigator.clipboard.writeText(walletAddress);\n      setNotification({\n        show: true,\n        message: 'Wallet address copied to clipboard',\n        type: 'success'\n      });\n    }\n    handleCloseMenu();\n  };\n  \n  const handleCloseNotification = () => {\n    setNotification({\n      ...notification,\n      show: false\n    });\n  };\n\n  return (\n    <AppBar position=\"sticky\" sx={{ backgroundColor: 'transparent', boxShadow: 'none' }}>\n      <Toolbar sx={{ justifyContent: 'space-between', py: 1 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Typography\n            variant=\"h6\"\n            component={RouterLink}\n            to=\"/\"\n            sx={{\n              textDecoration: 'none',\n              color: 'text.primary',\n              fontWeight: 'bold',\n              fontSize: '1.5rem',\n            }}\n          >\n            TruePass\n          </Typography>\n        </Box>\n\n        <Box sx={{ \n          display: 'flex', \n          alignItems: 'center', \n          gap: 2,\n          backgroundColor: 'white',\n          padding: '8px 16px',\n          borderRadius: '8px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        }}>\n          <Button\n            component={RouterLink}\n            to=\"/marketplace\"\n            sx={{\n              color: 'text.primary',\n              '&:hover': {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)',\n              },\n            }}\n          >\n            Marketplace\n          </Button>\n\n          {isAuthenticated ? (\n            <>\n              <Button\n                onClick={handleCreateNFT}\n                sx={{\n                  color: 'text.primary',\n                  '&:hover': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                  },\n                }}\n              >\n                Create NFT\n              </Button>\n              <IconButton\n                onClick={handleCartClick}\n                sx={{\n                  color: 'text.primary',\n                  '&:hover': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                  },\n                }}\n              >\n                <Badge badgeContent={cartItemCount} color=\"primary\">\n                  <ShoppingCartIcon />\n                </Badge>\n              </IconButton>\n            </>\n          ) : null}\n\n          {walletConnected ? (\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <Chip\n                icon={<AccountBalanceWalletIcon />}\n                label={`${formatAddress(walletAddress)} (${walletBalance} ETH)`}\n                onClick={handleWalletClick}\n                sx={{\n                  backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                  '&:hover': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.08)',\n                  },\n                }}\n              />\n            </Box>\n          ) : (\n            <Button\n              variant=\"contained\"\n              startIcon={<AccountBalanceWalletIcon />}\n              onClick={handleConnectWallet}\n              sx={{\n                backgroundColor: 'primary.main',\n                color: 'white',\n                '&:hover': {\n                  backgroundColor: 'primary.dark',\n                },\n              }}\n            >\n              Connect Wallet\n            </Button>\n          )}\n\n          {isAuthenticated ? (\n            <IconButton\n              onClick={handleUserMenuClick}\n              sx={{\n                color: 'text.primary',\n                '&:hover': {\n                  backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                },\n              }}\n            >\n              <Avatar sx={{ width: 32, height: 32 }}>\n                {user?.email?.[0].toUpperCase() || <PersonIcon />}\n              </Avatar>\n            </IconButton>\n          ) : (\n            <Button\n              component={RouterLink}\n              to=\"/login\"\n              startIcon={<LoginIcon />}\n              sx={{\n                color: 'text.primary',\n                '&:hover': {\n                  backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                },\n              }}\n            >\n              Login\n            </Button>\n          )}\n        </Box>\n      </Toolbar>\n      \n      <Snackbar\n        open={notification.show}\n        autoHideDuration={5000}\n        onClose={handleCloseNotification}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      >\n        <Alert \n          onClose={handleCloseNotification} \n          severity={notification.type} \n          variant=\"filled\"\n          sx={{ width: '100%' }}\n        >\n          {notification.message}\n        </Alert>\n      </Snackbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}