{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\Documents\\\\Nft\\\\src\\\\pages\\\\Marketplace.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Container, Grid, Card, CardContent, CardMedia, Typography, Box } from '@mui/material';\nimport { useSearch } from '../context/SearchContext';\nimport { useLocation } from 'react-router-dom';\n\n// Temporary mock data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockNFTs = [{\n  id: 1,\n  title: 'Digital Art #1',\n  price: '0.5 ETH',\n  image: 'https://via.placeholder.com/300',\n  creator: 'Artist1',\n  description: 'A beautiful digital artwork'\n}, {\n  id: 2,\n  title: 'Crypto Punk #2',\n  price: '2.5 ETH',\n  image: 'https://via.placeholder.com/300',\n  creator: 'Artist2',\n  description: 'Unique crypto punk character'\n}, {\n  id: 3,\n  title: 'Abstract Dreams',\n  price: '1.2 ETH',\n  image: 'https://via.placeholder.com/300',\n  creator: 'Artist3',\n  description: 'Abstract digital art piece'\n}\n// Add more mock NFTs as needed\n];\nconst Marketplace = () => {\n  _s();\n  const {\n    searchTerm\n  } = useSearch();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const searchQuery = queryParams.get('search') || '';\n\n  // Filter NFTs based on search term\n  const filteredNFTs = mockNFTs.filter(nft => {\n    const searchLower = searchQuery.toLowerCase();\n    return nft.title.toLowerCase().includes(searchLower) || nft.creator.toLowerCase().includes(searchLower) || nft.description.toLowerCase().includes(searchLower);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: [\"NFT Marketplace\", searchQuery && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"text.secondary\",\n        children: [\"Search results for: \", searchQuery]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [filteredNFTs.map(nft => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"200\",\n            image: nft.image,\n            alt: nft.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              component: \"div\",\n              children: nft.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Creator: \", nft.creator]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                children: nft.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, nft.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)), filteredNFTs.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          textAlign: 'center',\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          children: \"No NFTs found matching your search criteria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Marketplace, \"tkAwJ2pGRqVywCKbM4uE6y/v33o=\", false, function () {\n  return [useSearch, useLocation];\n});\n_c = Marketplace;\nexport default Marketplace;\nvar _c;\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["React","Container","Grid","Card","CardContent","CardMedia","Typography","Box","useSearch","useLocation","jsxDEV","_jsxDEV","mockNFTs","id","title","price","image","creator","description","Marketplace","_s","searchTerm","location","queryParams","URLSearchParams","search","searchQuery","get","filteredNFTs","filter","nft","searchLower","toLowerCase","includes","maxWidth","sx","mt","children","variant","component","gutterBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","item","xs","sm","md","lg","height","alt","length","width","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/hardik/Documents/Nft/src/pages/Marketplace.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Container, Grid, Card, CardContent, CardMedia, Typography, Box } from '@mui/material';\r\nimport { useSearch } from '../context/SearchContext';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// Temporary mock data\r\nconst mockNFTs = [\r\n  {\r\n    id: 1,\r\n    title: 'Digital Art #1',\r\n    price: '0.5 ETH',\r\n    image: 'https://via.placeholder.com/300',\r\n    creator: 'Artist1',\r\n    description: 'A beautiful digital artwork',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Crypto Punk #2',\r\n    price: '2.5 ETH',\r\n    image: 'https://via.placeholder.com/300',\r\n    creator: 'Artist2',\r\n    description: 'Unique crypto punk character',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Abstract Dreams',\r\n    price: '1.2 ETH',\r\n    image: 'https://via.placeholder.com/300',\r\n    creator: 'Artist3',\r\n    description: 'Abstract digital art piece',\r\n  },\r\n  // Add more mock NFTs as needed\r\n];\r\n\r\nconst Marketplace = () => {\r\n  const { searchTerm } = useSearch();\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const searchQuery = queryParams.get('search') || '';\r\n\r\n  // Filter NFTs based on search term\r\n  const filteredNFTs = mockNFTs.filter((nft) => {\r\n    const searchLower = searchQuery.toLowerCase();\r\n    return (\r\n      nft.title.toLowerCase().includes(searchLower) ||\r\n      nft.creator.toLowerCase().includes(searchLower) ||\r\n      nft.description.toLowerCase().includes(searchLower)\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        NFT Marketplace\r\n        {searchQuery && (\r\n          <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n            Search results for: {searchQuery}\r\n          </Typography>\r\n        )}\r\n      </Typography>\r\n      <Grid container spacing={4}>\r\n        {filteredNFTs.map((nft) => (\r\n          <Grid item key={nft.id} xs={12} sm={6} md={4} lg={3}>\r\n            <Card>\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"200\"\r\n                image={nft.image}\r\n                alt={nft.title}\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                  {nft.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Creator: {nft.creator}\r\n                </Typography>\r\n                <Box sx={{ mt: 1 }}>\r\n                  <Typography variant=\"h6\" color=\"primary\">\r\n                    {nft.price}\r\n                  </Typography>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n        {filteredNFTs.length === 0 && (\r\n          <Box sx={{ width: '100%', textAlign: 'center', mt: 4 }}>\r\n            <Typography variant=\"h6\" color=\"text.secondary\">\r\n              No NFTs found matching your search criteria\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Marketplace; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}