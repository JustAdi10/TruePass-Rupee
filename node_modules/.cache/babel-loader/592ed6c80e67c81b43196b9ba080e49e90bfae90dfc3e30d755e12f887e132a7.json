{"ast":null,"code":"var _jsxFileName = \"D:\\\\repos\\\\TruePass\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth, provider } from '../components/layout/firebase';\nimport { signInWithPopup, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, firebaseUser => {\n      if (firebaseUser) {\n        const userData = {\n          email: firebaseUser.email || ''\n        };\n        setIsAuthenticated(true);\n        setUser(userData);\n        localStorage.setItem('isAuthenticated', 'true');\n        localStorage.setItem('user', JSON.stringify(userData));\n      } else {\n        setIsAuthenticated(false);\n        setUser(null);\n        localStorage.removeItem('isAuthenticated');\n        localStorage.removeItem('user');\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const login = async (email, password) => {\n    // Simulate custom login — optional if only using Firebase\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    if (password.length < 6) {\n      throw new Error('Password must be at least 6 characters');\n    }\n    setIsAuthenticated(true);\n    setUser({\n      email\n    });\n    localStorage.setItem('isAuthenticated', 'true');\n    localStorage.setItem('user', JSON.stringify({\n      email\n    }));\n  };\n  const googleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const firebaseUser = result.user;\n      const userData = {\n        email: firebaseUser.email || ''\n      };\n      setIsAuthenticated(true);\n      setUser(userData);\n      localStorage.setItem('isAuthenticated', 'true');\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Google login error:', error);\n    }\n  };\n  const logout = () => {\n    signOut(auth);\n    setIsAuthenticated(false);\n    setUser(null);\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      googleLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","provider","signInWithPopup","signOut","onAuthStateChanged","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","unsubscribe","firebaseUser","userData","email","localStorage","setItem","JSON","stringify","removeItem","login","password","Promise","resolve","setTimeout","length","googleLogin","result","error","console","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/repos/TruePass/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { auth, provider } from '../components/layout/firebase';\r\nimport { signInWithPopup, signOut, onAuthStateChanged, User } from 'firebase/auth';\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  user: { email: string } | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  googleLogin: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n  const [user, setUser] = useState<{ email: string } | null>(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser: User | null) => {\r\n      if (firebaseUser) {\r\n        const userData = { email: firebaseUser.email || '' };\r\n        setIsAuthenticated(true);\r\n        setUser(userData);\r\n        localStorage.setItem('isAuthenticated', 'true');\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n      } else {\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n        localStorage.removeItem('isAuthenticated');\r\n        localStorage.removeItem('user');\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string): Promise<void> => {\r\n    // Simulate custom login — optional if only using Firebase\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    if (password.length < 6) {\r\n      throw new Error('Password must be at least 6 characters');\r\n    }\r\n    setIsAuthenticated(true);\r\n    setUser({ email });\r\n    localStorage.setItem('isAuthenticated', 'true');\r\n    localStorage.setItem('user', JSON.stringify({ email }));\r\n  };\r\n\r\n  const googleLogin = async (): Promise<void> => {\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const firebaseUser = result.user;\r\n      const userData = { email: firebaseUser.email || '' };\r\n      setIsAuthenticated(true);\r\n      setUser(userData);\r\n      localStorage.setItem('isAuthenticated', 'true');\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n    } catch (error) {\r\n      console.error('Google login error:', error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    signOut(auth);\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n    localStorage.removeItem('isAuthenticated');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout, googleLogin }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,SAASC,IAAI,EAAEC,QAAQ,QAAQ,+BAA+B;AAC9D,SAASC,eAAe,EAAEC,OAAO,EAAEC,kBAAkB,QAAc,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnF,MAAMC,WAAW,gBAAGX,aAAa,CAA8BY,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGd,UAAU,CAACU,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAU,KAAK,CAAC;EACtE,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAA2B,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd,MAAMqB,WAAW,GAAGhB,kBAAkB,CAACJ,IAAI,EAAGqB,YAAyB,IAAK;MAC1E,IAAIA,YAAY,EAAE;QAChB,MAAMC,QAAQ,GAAG;UAAEC,KAAK,EAAEF,YAAY,CAACE,KAAK,IAAI;QAAG,CAAC;QACpDN,kBAAkB,CAAC,IAAI,CAAC;QACxBE,OAAO,CAACG,QAAQ,CAAC;QACjBE,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;QAC/CD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;MACxD,CAAC,MAAM;QACLL,kBAAkB,CAAC,KAAK,CAAC;QACzBE,OAAO,CAAC,IAAI,CAAC;QACbK,YAAY,CAACI,UAAU,CAAC,iBAAiB,CAAC;QAC1CJ,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;MACjC;IACF,CAAC,CAAC;IAEF,OAAO,MAAMR,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAG,MAAAA,CAAON,KAAa,EAAEO,QAAgB,KAAoB;IACtE;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;IACvD,IAAIF,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;MACvB,MAAM,IAAItB,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IACAK,kBAAkB,CAAC,IAAI,CAAC;IACxBE,OAAO,CAAC;MAAEI;IAAM,CAAC,CAAC;IAClBC,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;IAC/CD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEJ;IAAM,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAA2B;IAC7C,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMlC,eAAe,CAACF,IAAI,EAAEC,QAAQ,CAAC;MACpD,MAAMoB,YAAY,GAAGe,MAAM,CAAClB,IAAI;MAChC,MAAMI,QAAQ,GAAG;QAAEC,KAAK,EAAEF,YAAY,CAACE,KAAK,IAAI;MAAG,CAAC;MACpDN,kBAAkB,CAAC,IAAI,CAAC;MACxBE,OAAO,CAACG,QAAQ,CAAC;MACjBE,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;MAC/CD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBpC,OAAO,CAACH,IAAI,CAAC;IACbiB,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;IACbK,YAAY,CAACI,UAAU,CAAC,iBAAiB,CAAC;IAC1CJ,YAAY,CAACI,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACEtB,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAEzB,eAAe;MAAEE,IAAI;MAAEW,KAAK;MAAEU,MAAM;MAAEJ;IAAY,CAAE;IAAArB,QAAA,EAChFA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,GAAA,CA9DWF,YAAyC;AAAAiC,EAAA,GAAzCjC,YAAyC;AAgEtD,eAAeN,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}