{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\Documents\\\\HackathonTp\\\\TruePass\\\\src\\\\context\\\\SearchContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContext = /*#__PURE__*/createContext(undefined);\nexport const SearchProvider = ({\n  children\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleSearch = term => {\n    setSearchTerm(term);\n\n    // Only update URL if we're on the marketplace page\n    if (location.pathname === '/marketplace') {\n      // Update URL without navigating if we're already on marketplace\n      const newUrl = term ? `/marketplace?search=${encodeURIComponent(term)}` : '/marketplace';\n      window.history.replaceState(null, '', newUrl);\n    } else {\n      // Navigate to marketplace with search term if we're on a different page\n      navigate(`/marketplace?search=${encodeURIComponent(term)}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: {\n      searchTerm,\n      setSearchTerm,\n      handleSearch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchProvider, \"F7M9ZVGn6a6h28W8jjuR3Kz1knY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SearchProvider;\nexport const useSearch = () => {\n  _s2();\n  const context = useContext(SearchContext);\n  if (context === undefined) {\n    throw new Error('useSearch must be used within a SearchProvider');\n  }\n  return context;\n};\n_s2(useSearch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useNavigate","useLocation","jsxDEV","_jsxDEV","SearchContext","undefined","SearchProvider","children","_s","searchTerm","setSearchTerm","navigate","location","handleSearch","term","pathname","newUrl","encodeURIComponent","window","history","replaceState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSearch","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/hardik/Documents/HackathonTp/TruePass/src/context/SearchContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\ntype SearchContextType = {\r\n  searchTerm: string;\r\n  setSearchTerm: (term: string) => void;\r\n  handleSearch: (term: string) => void;\r\n};\r\n\r\nconst SearchContext = createContext<SearchContextType | undefined>(undefined);\r\n\r\nexport const SearchProvider = ({ children }: { children: ReactNode }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const handleSearch = (term: string) => {\r\n    setSearchTerm(term);\r\n    \r\n    // Only update URL if we're on the marketplace page\r\n    if (location.pathname === '/marketplace') {\r\n      // Update URL without navigating if we're already on marketplace\r\n      const newUrl = term \r\n        ? `/marketplace?search=${encodeURIComponent(term)}`\r\n        : '/marketplace';\r\n      window.history.replaceState(null, '', newUrl);\r\n    } else {\r\n      // Navigate to marketplace with search term if we're on a different page\r\n      navigate(`/marketplace?search=${encodeURIComponent(term)}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchContext.Provider value={{ searchTerm, setSearchTerm, handleSearch }}>\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSearch = () => {\r\n  const context = useContext(SearchContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSearch must be used within a SearchProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAC7E,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5D,MAAMC,aAAa,gBAAGP,aAAa,CAAgCQ,SAAS,CAAC;AAE7E,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAIC,IAAY,IAAK;IACrCJ,aAAa,CAACI,IAAI,CAAC;;IAEnB;IACA,IAAIF,QAAQ,CAACG,QAAQ,KAAK,cAAc,EAAE;MACxC;MACA,MAAMC,MAAM,GAAGF,IAAI,GACf,uBAAuBG,kBAAkB,CAACH,IAAI,CAAC,EAAE,GACjD,cAAc;MAClBI,MAAM,CAACC,OAAO,CAACC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAEJ,MAAM,CAAC;IAC/C,CAAC,MAAM;MACL;MACAL,QAAQ,CAAC,uBAAuBM,kBAAkB,CAACH,IAAI,CAAC,EAAE,CAAC;IAC7D;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,aAAa,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEb,UAAU;MAAEC,aAAa;MAAEG;IAAa,CAAE;IAAAN,QAAA,EACxEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAClB,EAAA,CA1BWF,cAAc;EAAA,QAERN,WAAW,EACXC,WAAW;AAAA;AAAA0B,EAAA,GAHjBrB,cAAc;AA4B3B,OAAO,MAAMsB,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAG/B,UAAU,CAACK,aAAa,CAAC;EACzC,IAAI0B,OAAO,KAAKzB,SAAS,EAAE;IACzB,MAAM,IAAI0B,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}