{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import App from'./App';import reportWebVitals from'./reportWebVitals';// Always initialize the app when loading index.tsx directly\n// This is needed because if we are referred from the landing page,\n// we want to render the React app immediately\nimport{jsx as _jsx}from\"react/jsx-runtime\";console.log('React app initializing, localStorage visited:',localStorage.getItem('visited'));const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsx","_jsx","console","log","localStorage","getItem","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["C:/Users/hardik/Documents/Nft/src/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Always initialize the app when loading index.tsx directly\r\n// This is needed because if we are referred from the landing page,\r\n// we want to render the React app immediately\r\nconsole.log('React app initializing, localStorage visited:', localStorage.getItem('visited'));\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals(); "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAE/C;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACAC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAEC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAE7F,KAAM,CAAAC,IAAI,CAAGT,QAAQ,CAACU,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC,CAEDH,IAAI,CAACI,MAAM,cACTT,IAAA,CAACL,KAAK,CAACe,UAAU,EAAAC,QAAA,cACfX,IAAA,CAACH,GAAG,GAAE,CAAC,CACS,CACpB,CAAC,CAEDC,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}