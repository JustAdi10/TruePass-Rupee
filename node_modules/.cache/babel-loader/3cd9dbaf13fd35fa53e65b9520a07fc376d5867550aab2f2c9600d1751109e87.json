{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\Documents\\\\Nft\\\\src\\\\pages\\\\CreateNFT.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Paper, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateNFT = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    price: '',\n    image: null\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setFormData(prev => ({\n        ...prev,\n        image: e.target.files[0]\n      }));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // TODO: Implement NFT creation logic\n    console.log('Form submitted:', formData);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Create New NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"NFT Name\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Description\",\n              name: \"description\",\n              value: formData.description,\n              onChange: handleInputChange,\n              multiline: true,\n              rows: 4,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Price (ETH)\",\n              name: \"price\",\n              type: \"number\",\n              value: formData.price,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: \"label\",\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [\"Upload Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                hidden: true,\n                accept: \"image/*\",\n                onChange: handleImageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), formData.image && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Selected file: \", formData.image.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              size: \"large\",\n              children: \"Create NFT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateNFT, \"cuR2F+JiR4m7RNc05a8PdkMpy8M=\");\n_c = CreateNFT;\nvar _c;\n$RefreshReg$(_c, \"CreateNFT\");","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Paper","Grid","jsxDEV","_jsxDEV","CreateNFT","_s","formData","setFormData","name","description","price","image","handleInputChange","e","value","target","prev","handleImageChange","files","handleSubmit","preventDefault","console","log","maxWidth","sx","mt","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","p","onSubmit","container","spacing","item","xs","fullWidth","label","onChange","required","multiline","rows","type","mb","hidden","accept","color","size","_c","$RefreshReg$"],"sources":["C:/Users/hardik/Documents/Nft/src/pages/CreateNFT.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n} from '@mui/material';\r\n\r\nconst CreateNFT = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    image: null as File | null,\r\n  });\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        image: e.target.files![0],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // TODO: Implement NFT creation logic\r\n    console.log('Form submitted:', formData);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Create New NFT\r\n      </Typography>\r\n      <Paper sx={{ p: 4 }}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"NFT Name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                multiline\r\n                rows={4}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Price (ETH)\"\r\n                name=\"price\"\r\n                type=\"number\"\r\n                value={formData.price}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                fullWidth\r\n                sx={{ mb: 2 }}\r\n              >\r\n                Upload Image\r\n                <input\r\n                  type=\"file\"\r\n                  hidden\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageChange}\r\n                />\r\n              </Button>\r\n              {formData.image && (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Selected file: {formData.image.name}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                size=\"large\"\r\n              >\r\n                Create NFT\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}