{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\Documents\\\\Nft\\\\src\\\\pages\\\\Profile.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Container, Typography, Box, Grid, Card, CardContent, CardMedia, Tabs, Tab } from '@mui/material';\n\n// Temporary mock data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockUserNFTs = [{\n  id: 1,\n  title: 'My NFT #1',\n  price: '0.5 ETH',\n  image: 'https://via.placeholder.com/300',\n  status: 'owned'\n}, {\n  id: 2,\n  title: 'My NFT #2',\n  price: '1.5 ETH',\n  image: 'https://via.placeholder.com/300',\n  status: 'created'\n}];\nconst Profile = () => {\n  _s();\n  const [tabValue, setTabValue] = React.useState(0);\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"text.secondary\",\n        children: \"Wallet Address: 0x1234...5678\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: tabValue,\n      onChange: handleTabChange,\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"My NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Created NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), tabValue === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: mockUserNFTs.filter(nft => nft.status === 'owned').map(nft => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"200\",\n            image: nft.image,\n            alt: nft.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              component: \"div\",\n              children: nft.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Price: \", nft.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, nft.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), tabValue === 1 && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: mockUserNFTs.filter(nft => nft.status === 'created').map(nft => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"200\",\n            image: nft.image,\n            alt: nft.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              component: \"div\",\n              children: nft.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Price: \", nft.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, nft.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), tabValue === 2 && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"No recent activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"8xDoMf2dCMwhPWqj+mT3H7/i8ZA=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","Container","Typography","Box","Grid","Card","CardContent","CardMedia","Tabs","Tab","jsxDEV","_jsxDEV","mockUserNFTs","id","title","price","image","status","Profile","_s","tabValue","setTabValue","useState","handleTabChange","event","newValue","maxWidth","sx","mt","children","mb","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","value","onChange","label","container","spacing","filter","nft","map","item","xs","sm","md","lg","height","alt","_c","$RefreshReg$"],"sources":["C:/Users/hardik/Documents/Nft/src/pages/Profile.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Tabs,\r\n  Tab,\r\n} from '@mui/material';\r\n\r\n// Temporary mock data\r\nconst mockUserNFTs = [\r\n  {\r\n    id: 1,\r\n    title: 'My NFT #1',\r\n    price: '0.5 ETH',\r\n    image: 'https://via.placeholder.com/300',\r\n    status: 'owned',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'My NFT #2',\r\n    price: '1.5 ETH',\r\n    image: 'https://via.placeholder.com/300',\r\n    status: 'created',\r\n  },\r\n];\r\n\r\nconst Profile = () => {\r\n  const [tabValue, setTabValue] = React.useState(0);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\r\n      <Box sx={{ mb: 4 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          My Profile\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n          Wallet Address: 0x1234...5678\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Tabs value={tabValue} onChange={handleTabChange} sx={{ mb: 4 }}>\r\n        <Tab label=\"My NFTs\" />\r\n        <Tab label=\"Created NFTs\" />\r\n        <Tab label=\"Activity\" />\r\n      </Tabs>\r\n\r\n      {tabValue === 0 && (\r\n        <Grid container spacing={4}>\r\n          {mockUserNFTs\r\n            .filter((nft) => nft.status === 'owned')\r\n            .map((nft) => (\r\n              <Grid item key={nft.id} xs={12} sm={6} md={4} lg={3}>\r\n                <Card>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"200\"\r\n                    image={nft.image}\r\n                    alt={nft.title}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                      {nft.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Price: {nft.price}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      )}\r\n\r\n      {tabValue === 1 && (\r\n        <Grid container spacing={4}>\r\n          {mockUserNFTs\r\n            .filter((nft) => nft.status === 'created')\r\n            .map((nft) => (\r\n              <Grid item key={nft.id} xs={12} sm={6} md={4} lg={3}>\r\n                <Card>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"200\"\r\n                    image={nft.image}\r\n                    alt={nft.title}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                      {nft.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Price: {nft.price}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      )}\r\n\r\n      {tabValue === 2 && (\r\n        <Box>\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            No recent activity\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}